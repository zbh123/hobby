# -*- coding:utf-8 -*-
class TreeNode:
    def __init__(self, x):
        self.val = x
        self.left = None
        self.right = None
class Solution:
    # 返回构造的TreeNode根节点
    
    #已知前序、中序求原二叉树
    def reConstructBinaryTree(self, pre, tin):
        # write code here
        if len(pre) == 0:
            return None
        root_data = TreeNode(pre[0])
        i = tin.index(pre[0])
        root_data.left = self.reConstructBinaryTree(pre[1:i+1], tin[:i])
        root_data.right = self.reConstructBinaryTree(pre[i+1:], tin[i+1:])
        return root_data
    #已知后序、中序求原二叉树
    def reConstructBinaryTree(self, pre, tin):
        # write code here
        if len(pre) == 0:
            return None
        root_data = TreeNode(pre[-1])
        i = tin.index(pre[-1])
        root_data.left = self.reConstructBinaryTree(pre[:i], tin[:i])
        root_data.right = self.reConstructBinaryTree(pre[i:-2], tin[i+1:])
        return root_data
